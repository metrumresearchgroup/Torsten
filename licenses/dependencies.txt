STAN MATH DEPENDENCIES
=====================================

C++ 
=====================================

This package requires compiling C++ code.  Builds are scripted with
make and compilation is carried out with g++ (part of gcc).  There is
nothing g++ or make specific in the code, so other compilers and build
systems could be used.

Both of these are typically built into Linux, Mac OS X and other
Unix-derived systems.  For Windows, it's easiest to install them as
part of the Cygwin distribution of Unix tools for Windows, which also
includes a standard Bash shell.

1.  g++
----------------------------------------
home: http://gcc.gnu.org/
license: GPL3+
         http://www.gnu.org/licenses/gpl.html
version: Mac: gcc (GCC) 4.3.4 20090804 (release) 1 [cygwin]
              i686-apple-darwin10-g++-4.2.1:

2. gnu make
----------------------------------------
home: http://www.gnu.org/software/make/
license: GPL3+
         http://www.gnu.org/licenses/gpl.html
version: gnumake 3.81 [cygwin]


RUNTIME LIBS
========================================

These must be installed to compile and run the stanc compiler and to
compile and run models.  The relevant bits of Boost and Eigen have
been checked into version control.

3. eigen
----------------------------------------
home:    http://eigen.tuxfamily.org
license: LGPL3+
         http://www.gnu.org/licenses/lgpl.html
unpack:  lib/Eigen/{Array,...}
version  3.3.3


4. boost
----------------------------------------
home:    http://www.boost.org/
license: Boost
         http://www.boost.org/users/license.html
unpack:  lib/boost/{accumulators,algorithm,...}
version: 1.69.0

5. Intel TBB
----------------------------------------
home:    https://www.threadingbuildingblocks.org/
license: Apache 2.0
         http://www.apache.org/licenses/LICENSE-2.0
unpack:  lib/tbb/*
version: 2019_U5


DEVELOPMENT LIBS
========================================

These libs are only necessary for developing the system itself.
Googltest is included with the distribution, but doxygen is not.

5. googletest
----------------------------------------
home:    http://code.google.com/p/googletest/
license: New BSD
         http://www.opensource.org/licenses/bsd-license.php
unpack:  lib/gtest/{CHANGES,CMakeLists.txt,...,test,xcode}
version: 1.7.0


6. doxygen
----------------------------------------
home:    http://www.stack.nl/~dimitri/doxygen/index.html
license: GPL2
         http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
unpack:  put platform binary on Path so it can be called as "doxygen"
         on the Mac, it has an annoying wizard, but you'll find
         "doxygen" executable (after dropping Doxygen in Applications)
         at path: /Applications/Doxygen.app/Contents/Resources
version: 1.7.3



PLATFORM SPECIFIC
========================================

The project is set up to build in a standard Unix fashion.
It has not been adapted to Windows-specific environments, but
can be built using Cygwin under Windows.

MAC OS X
----------------------------------------

a. Xcode
   Unix development environment, including make, gcc, etc.

b. Aquamacs
   Emacs with Mac-like controls.


WINDOWS
----------------------------------------

a. Cygwin
   Unix development enfironment for Windows.
   INcludes make, gcc, etc., though you have to select
   them when you install.

b. Gnu Emacs
   Better character encoding control than Xemacs.


LINUX
----------------------------------------
So far, the ones I've used at least, have compilers, emacs and
shells preinstalled.

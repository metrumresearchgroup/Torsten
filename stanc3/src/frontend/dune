(library
  (name frontend)
  (libraries core_kernel re menhirLib fmt middle analysis_and_optimization)
  (inline_tests)
  (preprocess (pps ppx_jane ppx_deriving.fold ppx_deriving.map)))

(ocamllex lexer)

(rule
 (targets parsing_errors.ml)
 (deps parser.mly parser.messages)
 (action
  (with-stdout-to %{targets}
   (run menhir
    --explain
    --strict
    --unused-tokens parser.mly --compile-errors parser.messages))))

(menhir
 (modules parser)
 (flags :standard --table --strict --unused-tokens --fixed-exception))

(rule
 (with-stdout-to parser_updated.messages
  (run menhir %{dep:parser.mly} --update-errors %{dep:parser.messages})))

(rule
 (with-stdout-to parser_updated_trimmed.messages
  (run %{dep:strip_redundant_parser_state.py} %{dep:parser_updated.messages})))

(rule
 (targets parser_new.messages)
 (action
   (with-stdout-to %{targets} (run menhir --list-errors %{dep:parser.mly}))))

(alias
 (name update_messages)
 (action
  (progn
   (run %{dep:add_missing_messages.py} %{dep:parser.mly} %{dep:parser_new.messages} %{dep:parser_updated_trimmed.messages})
   (diff %{dep:parser.messages} %{dep:parser_updated_trimmed.messages}))))

(alias
 (name runtest)
 (action
  (run menhir parser.mly --compare-errors %{dep:parser_new.messages} --compare-errors %{dep:parser.messages})))
